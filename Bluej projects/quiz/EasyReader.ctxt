#BlueJ class context
comment0.params=
comment0.target=EasyReader()
comment0.text=\r\n\ \ Constructs\ an\ <code>EasyReader</code>\ associated\ with\r\n\ \ <code>System.in</code>.\r\n
comment1.params=fileName
comment1.target=EasyReader(java.lang.String)
comment1.text=\r\n\ \ Constructs\ an\ <code>EasyReader</code>\ associated\ with\ a\ file\ for\ reading.\r\n\ \ @param\ fileName\ the\ name\ or\ pathname\ of\ the\ file.\r\n
comment10.params=
comment10.target=double\ readDouble()
comment10.text=\r\n\ \ Reads\ the\ next\ double\ (without\ validating\ its\ format).\r\n\ \ @return\ the\ number\ read\ or\ <code>Double.NaN</code>,\ if\ trying\ to\ read\r\n\ \ beyond\ the\ EOF,\ or\ if\ the\ token\ read\ does\ not\ represent\ a\ valid\ double.\r\n
comment2.params=
comment2.target=void\ close()
comment2.text=\r\n\ \ Closes\ the\ file.\r\n
comment3.params=
comment3.target=boolean\ bad()
comment3.text=\r\n\ \ Checks\ the\ status\ of\ the\ file.\r\n\ \ @return\ true\ if\ an\ error\ occurred\ when\ opening\ or\ reading\ the\ file;\r\n\ \ false\ otherwise.\r\n
comment4.params=
comment4.target=boolean\ eof()
comment4.text=\r\n\ \ Checks\ the\ EOF\ status\ of\ the\ file.\r\n\ \ @return\ true\ if\ EOF\ was\ encountered\ in\ the\ previous\ read\r\n\ \ operation;\ false\ otherwise.\r\n
comment5.params=
comment5.target=boolean\ ready()
comment6.params=
comment6.target=char\ readChar()
comment6.text=\r\n\ \ Reads\ the\ next\ character\ from\ the\ file\ (any\ character\ including\r\n\ \ a\ space\ or\ a\ newline\ character).\r\n\ \ @return\ the\ character\ read\ or\ <code>null</code>\ character\r\n\ \ (Unicode\ 0)\ if\ trying\ to\ read\ beyond\ the\ EOF.\r\n
comment7.params=
comment7.target=java.lang.String\ readLine()
comment7.text=\r\n\ \ Reads\ from\ the\ current\ position\ in\ the\ file\ up\ to\ and\ including\r\n\ \ the\ next\ newline\ character.\ \ The\ newline\ character\ is\ thrown\ away.\r\n\ \ @return\ the\ string\ read\ (excluding\ the\ newline\ character)\ or\r\n\ \ null,\ if\ trying\ to\ read\ beyond\ the\ EOF.\r\n
comment8.params=
comment8.target=java.lang.String\ readWord()
comment8.text=\r\n\ \ Skips\ whitespace\ and\ reads\ the\ next\ word\ (a\ contiguous\ string\ of\r\n\ \ non-whitespace\ characters),\ up\ to\ but\ excluding\ the\ next\ space,\r\n\ \ newline,\ etc.\r\n\ \ @return\ the\ string\ read\ or\ null,\ if\ trying\ to\ read\ beyond\ the\ EOF.\r\n
comment9.params=
comment9.target=int\ readInt()
comment9.text=\r\n\ \ Reads\ the\ next\ integer\ (without\ validating\ its\ format).\r\n\ \ @return\ the\ integer\ read\ or\ 0\ if,\ trying\ to\ read\ beyond\ the\ EOF,\r\n\ \ or\ if\ the\ read\ word\ does\ not\ represent\ a\ valid\ integer.\r\n
numComments=11
